{"ast":null,"code":"import _objectSpread from\"/Users/the3796/Repositories/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/the3796/Repositories/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect,useRef}from\"react\";import ReactCardFlip from\"react-card-flip\";import{CardContext}from\"../pages/CardPage\";var usePrevious=function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;});return ref.current;};export var Card=function Card(_ref){var card=_ref.card,cover=_ref.cover;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFlipped=_useState2[0],setIsFlipped=_useState2[1];var prevFlipped=useRef(null);var _useContext=useContext(CardContext),handlerAddCard=_useContext.handlerAddCard,handlerRemoveCard=_useContext.handlerRemoveCard;var clickHandler=function clickHandler(){console.log(\"click handler on \",card);setIsFlipped(function(prevValue){return!prevValue;});};useEffect(function(){if(cover){setIsFlipped(false);}},[cover]);useEffect(function(){if(prevFlipped.current&&!isFlipped){console.log(\"ON RETIRE\");handlerRemoveCard(card);}else if(!prevFlipped.current&&isFlipped){console.log(\"ON AJOUTE\");handlerAddCard(card);}prevFlipped.current=isFlipped;},[isFlipped,card,handlerAddCard,handlerRemoveCard]);return/*#__PURE__*/React.createElement(\"div\",{style:styles.child},/*#__PURE__*/React.createElement(ReactCardFlip,{isFlipped:isFlipped,flipSpeedBackToFront:1,flipSpeedFrontToBack:1,flipDirection:\"horizontal\",containerStyle:{display:\"flex\",flex:1}},/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread({display:\"flex\",flex:1,height:CARD_HEIGHT,justifyContent:\"center\",alignItems:\"center\",background:\"linear-gradient(to right bottom, #FC575E, #F7B42C)\",cursor:\"pointer\"},styles.border),onClick:clickHandler},/*#__PURE__*/React.createElement(\"h4\",null,\"Memory\")),card.type===\"image\"?/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread({display:\"flex\",height:CARD_HEIGHT},styles.border),onClick:clickHandler},/*#__PURE__*/React.createElement(\"img\",{src:card.data,style:_objectSpread({},styles.image,{},styles.border),alt:\"back\"})):/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread({display:\"flex\",flex:1,height:CARD_HEIGHT-4,justifyContent:\"center\",alignItems:\"center\",border:\"2px solid tomato\",cursor:\"pointer\",background:\"linear-gradient(to right bottom, #F6D285, #BBF0F3)\"},styles.border),onClick:clickHandler},/*#__PURE__*/React.createElement(\"p\",null,card.data))));};var CARD_HEIGHT=250;var styles={image:{minHeight:\"100%\",maxWidth:\"100%\"},child:{display:\"flex\",flex:\"0 0 15%\",margin:2,height:CARD_HEIGHT},border:{borderRadius:15}};/*\n<div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: 100,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"tomato\"\n          }}\n          onClick={clickHandler}\n        >\n          <p>Memory</p>\n        </div>\n\n        <div style={styles.card} onClick={clickHandler}>\n          {card.type === \"image\" ? (\n            <img\n              style={{\n                minWidth: \"100%\",\n                display: \"block\",\n                alignSelf: \"center\",\n                height: 100\n              }}\n              alt=\"back card\"\n              src={card.data}\n            />\n          ) : (\n            <p>{card.data}</p>\n          )}\n        </div>\n*/","map":{"version":3,"sources":["/Users/the3796/Repositories/memory/src/components/Card.js"],"names":["React","useState","useContext","useEffect","useRef","ReactCardFlip","CardContext","usePrevious","value","ref","current","Card","card","cover","isFlipped","setIsFlipped","prevFlipped","handlerAddCard","handlerRemoveCard","clickHandler","console","log","prevValue","styles","child","display","flex","height","CARD_HEIGHT","justifyContent","alignItems","background","cursor","border","type","data","image","minHeight","maxWidth","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { CardContext } from \"../pages/CardPage\";\n\nconst usePrevious = value => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport const Card = ({ card, cover }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const prevFlipped = useRef(null);\n  const { handlerAddCard, handlerRemoveCard } = useContext(CardContext);\n\n  const clickHandler = () => {\n    console.log(\"click handler on \", card);\n    setIsFlipped(prevValue => !prevValue);\n  };\n\n  useEffect(() => {\n    if (cover) {\n      setIsFlipped(false);\n    }\n  }, [cover]);\n\n  useEffect(() => {\n    if (prevFlipped.current && !isFlipped) {\n      console.log(\"ON RETIRE\");\n      handlerRemoveCard(card);\n    } else if (!prevFlipped.current && isFlipped) {\n      console.log(\"ON AJOUTE\");\n      handlerAddCard(card);\n    }\n    prevFlipped.current = isFlipped;\n  }, [isFlipped, card, handlerAddCard, handlerRemoveCard]);\n\n  return (\n    <div style={styles.child}>\n      <ReactCardFlip\n        isFlipped={isFlipped}\n        flipSpeedBackToFront={1}\n        flipSpeedFrontToBack={1}\n        flipDirection=\"horizontal\"\n        containerStyle={{\n          display: \"flex\",\n          flex: 1\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: CARD_HEIGHT,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"linear-gradient(to right bottom, #FC575E, #F7B42C)\",\n            cursor: \"pointer\",\n            ...styles.border\n          }}\n          onClick={clickHandler}\n        >\n          <h4>Memory</h4>\n        </div>\n\n        {card.type === \"image\" ? (\n          <div\n            style={{\n              display: \"flex\",\n              height: CARD_HEIGHT,\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <img\n              src={card.data}\n              style={{\n                ...styles.image,\n                ...styles.border\n              }}\n              alt={\"back\"}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              height: CARD_HEIGHT - 4,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              border: \"2px solid tomato\",\n              cursor: \"pointer\",\n              background: \"linear-gradient(to right bottom, #F6D285, #BBF0F3)\",\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <p>{card.data}</p>\n          </div>\n        )}\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nconst CARD_HEIGHT = 250;\n\nconst styles = {\n  image: {\n    minHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  child: {\n    display: \"flex\",\n    flex: \"0 0 15%\",\n    margin: 2,\n    height: CARD_HEIGHT\n  },\n  border: {\n    borderRadius: 15\n  }\n};\n\n/*\n<div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: 100,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"tomato\"\n          }}\n          onClick={clickHandler}\n        >\n          <p>Memory</p>\n        </div>\n\n        <div style={styles.card} onClick={clickHandler}>\n          {card.type === \"image\" ? (\n            <img\n              style={{\n                minWidth: \"100%\",\n                display: \"block\",\n                alignSelf: \"center\",\n                height: 100\n              }}\n              alt=\"back card\"\n              src={card.data}\n            />\n          ) : (\n            <p>{card.data}</p>\n          )}\n        </div>\n*/\n"]},"metadata":{},"sourceType":"module"}