{"ast":null,"code":"var _jsxFileName = \"/Users/the3796/Repositories/memory/web/src/components/Card.js\";\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { CardContext } from \"../pages/CardPage\";\nexport const Card = ({\n  card,\n  cover\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const prevFlipped = useRef(null);\n  const {\n    handlerAddCard,\n    handlerRemoveCard\n  } = useContext(CardContext);\n\n  const clickHandler = () => {\n    setIsFlipped(prevValue => !prevValue);\n  };\n\n  useEffect(() => {\n    if (cover) {\n      setIsFlipped(false);\n    }\n  }, [cover]);\n  useEffect(() => {\n    if (prevFlipped.current && !isFlipped) {\n      handlerRemoveCard(card);\n    } else if (!prevFlipped.current && isFlipped) {\n      handlerAddCard(card);\n    }\n\n    prevFlipped.current = isFlipped;\n  }, [isFlipped, card, handlerAddCard, handlerRemoveCard]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.child,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipSpeedBackToFront: 1,\n    flipSpeedFrontToBack: 1,\n    flipDirection: \"horizontal\",\n    containerStyle: {\n      display: \"flex\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      height: CARD_HEIGHT,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      background: \"linear-gradient(to right bottom, #FC575E, #F7B42C)\",\n      cursor: \"pointer\",\n      ...styles.border\n    },\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Memory\")), card.type === \"image\" ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: CARD_HEIGHT,\n      ...styles.border\n    },\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: card.data,\n    style: { ...styles.image,\n      ...styles.border\n    },\n    alt: \"back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      height: CARD_HEIGHT - 4,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      border: \"2px solid tomato\",\n      cursor: \"pointer\",\n      background: \"linear-gradient(to right bottom, #F6D285, #BBF0F3)\",\n      ...styles.border\n    },\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, card.data))));\n};\nconst CARD_HEIGHT = 250;\nconst styles = {\n  image: {\n    minHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  child: {\n    display: \"flex\",\n    flex: \"0 0 15%\",\n    margin: 2,\n    height: CARD_HEIGHT\n  },\n  border: {\n    borderRadius: 15\n  }\n};\n/*\n<div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: 100,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"tomato\"\n          }}\n          onClick={clickHandler}\n        >\n          <p>Memory</p>\n        </div>\n\n        <div style={styles.card} onClick={clickHandler}>\n          {card.type === \"image\" ? (\n            <img\n              style={{\n                minWidth: \"100%\",\n                display: \"block\",\n                alignSelf: \"center\",\n                height: 100\n              }}\n              alt=\"back card\"\n              src={card.data}\n            />\n          ) : (\n            <p>{card.data}</p>\n          )}\n        </div>\n*/","map":{"version":3,"sources":["/Users/the3796/Repositories/memory/web/src/components/Card.js"],"names":["React","useState","useContext","useEffect","useRef","ReactCardFlip","CardContext","Card","card","cover","isFlipped","setIsFlipped","prevFlipped","handlerAddCard","handlerRemoveCard","clickHandler","prevValue","current","styles","child","display","flex","height","CARD_HEIGHT","justifyContent","alignItems","background","cursor","border","type","data","image","textAlign","minHeight","maxWidth","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { CardContext } from \"../pages/CardPage\";\n\nexport const Card = ({ card, cover }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const prevFlipped = useRef(null);\n  const { handlerAddCard, handlerRemoveCard } = useContext(CardContext);\n\n  const clickHandler = () => {\n    setIsFlipped(prevValue => !prevValue);\n  };\n\n  useEffect(() => {\n    if (cover) {\n      setIsFlipped(false);\n    }\n  }, [cover]);\n\n  useEffect(() => {\n    if (prevFlipped.current && !isFlipped) {\n      handlerRemoveCard(card);\n    } else if (!prevFlipped.current && isFlipped) {\n      handlerAddCard(card);\n    }\n    prevFlipped.current = isFlipped;\n  }, [isFlipped, card, handlerAddCard, handlerRemoveCard]);\n\n  return (\n    <div style={styles.child}>\n      <ReactCardFlip\n        isFlipped={isFlipped}\n        flipSpeedBackToFront={1}\n        flipSpeedFrontToBack={1}\n        flipDirection=\"horizontal\"\n        containerStyle={{\n          display: \"flex\",\n          flex: 1\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: CARD_HEIGHT,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"linear-gradient(to right bottom, #FC575E, #F7B42C)\",\n            cursor: \"pointer\",\n            ...styles.border\n          }}\n          onClick={clickHandler}\n        >\n          <h4>Memory</h4>\n        </div>\n\n        {card.type === \"image\" ? (\n          <div\n            style={{\n              display: \"flex\",\n              height: CARD_HEIGHT,\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <img\n              src={card.data}\n              style={{\n                ...styles.image,\n                ...styles.border\n              }}\n              alt={\"back\"}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              height: CARD_HEIGHT - 4,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              border: \"2px solid tomato\",\n              cursor: \"pointer\",\n              background: \"linear-gradient(to right bottom, #F6D285, #BBF0F3)\",\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <p style={{textAlign: 'center'}}>{card.data}</p>\n          </div>\n        )}\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nconst CARD_HEIGHT = 250;\n\nconst styles = {\n  image: {\n    minHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  child: {\n    display: \"flex\",\n    flex: \"0 0 15%\",\n    margin: 2,\n    height: CARD_HEIGHT\n  },\n  border: {\n    borderRadius: 15\n  }\n};\n\n/*\n<div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: 100,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"tomato\"\n          }}\n          onClick={clickHandler}\n        >\n          <p>Memory</p>\n        </div>\n\n        <div style={styles.card} onClick={clickHandler}>\n          {card.type === \"image\" ? (\n            <img\n              style={{\n                minWidth: \"100%\",\n                display: \"block\",\n                alignSelf: \"center\",\n                height: 100\n              }}\n              alt=\"back card\"\n              src={card.data}\n            />\n          ) : (\n            <p>{card.data}</p>\n          )}\n        </div>\n*/\n"]},"metadata":{},"sourceType":"module"}