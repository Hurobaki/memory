{"version":3,"sources":["components/Card.js","pages/CardPage.js","App.js","serviceWorker.js","index.js"],"names":["Card","card","cover","useState","isFlipped","setIsFlipped","prevFlipped","useRef","useContext","CardContext","handlerAddCard","handlerRemoveCard","clickHandler","console","log","prevValue","useEffect","current","style","styles","child","flipSpeedBackToFront","flipSpeedFrontToBack","flipDirection","containerStyle","display","flex","height","CARD_HEIGHT","justifyContent","alignItems","background","cursor","border","onClick","type","src","data","image","alt","minHeight","maxWidth","margin","borderRadius","createContext","cardsData","id","useStyles","makeStyles","theme","root","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","CardPage","cards","setCards","clickedCards","setClickedCards","coverCards","setCoverCards","removedCards","setRemovedCard","classes","map","sort","Math","random","value","a","b","length","card1","card2","setTimeout","onClickHandler","cardNumber","cardDataTuples","reduce","acc","curr","keepValues","shuffleArray","array","counter","index","floor","temp","shuffle","Object","values","slice","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","key","Provider","filter","parent","includes","flexWrap","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f8cc131.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { CardContext } from \"../pages/CardPage\";\n\nconst usePrevious = value => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport const Card = ({ card, cover }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const prevFlipped = useRef(null);\n  const { handlerAddCard, handlerRemoveCard } = useContext(CardContext);\n\n  const clickHandler = () => {\n    console.log(\"click handler on \", card);\n    setIsFlipped(prevValue => !prevValue);\n  };\n\n  useEffect(() => {\n    if (cover) {\n      setIsFlipped(false);\n    }\n  }, [cover]);\n\n  useEffect(() => {\n    if (prevFlipped.current && !isFlipped) {\n      console.log(\"ON RETIRE\");\n      handlerRemoveCard(card);\n    } else if (!prevFlipped.current && isFlipped) {\n      console.log(\"ON AJOUTE\");\n      handlerAddCard(card);\n    }\n    prevFlipped.current = isFlipped;\n  }, [isFlipped, card, handlerAddCard, handlerRemoveCard]);\n\n  return (\n    <div style={styles.child}>\n      <ReactCardFlip\n        isFlipped={isFlipped}\n        flipSpeedBackToFront={1}\n        flipSpeedFrontToBack={1}\n        flipDirection=\"horizontal\"\n        containerStyle={{\n          display: \"flex\",\n          flex: 1\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: CARD_HEIGHT,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"linear-gradient(to right bottom, #FC575E, #F7B42C)\",\n            cursor: \"pointer\",\n            ...styles.border\n          }}\n          onClick={clickHandler}\n        >\n          <h4>Memory</h4>\n        </div>\n\n        {card.type === \"image\" ? (\n          <div\n            style={{\n              display: \"flex\",\n              height: CARD_HEIGHT,\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <img\n              src={card.data}\n              style={{\n                ...styles.image,\n                ...styles.border\n              }}\n              alt={\"back\"}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              height: CARD_HEIGHT - 4,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              border: \"2px solid tomato\",\n              cursor: \"pointer\",\n              background: \"linear-gradient(to right bottom, #F6D285, #BBF0F3)\",\n              ...styles.border\n            }}\n            onClick={clickHandler}\n          >\n            <p>{card.data}</p>\n          </div>\n        )}\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nconst CARD_HEIGHT = 250;\n\nconst styles = {\n  image: {\n    minHeight: \"100%\",\n    maxWidth: \"100%\"\n  },\n  child: {\n    display: \"flex\",\n    flex: \"0 0 15%\",\n    margin: 2,\n    height: CARD_HEIGHT\n  },\n  border: {\n    borderRadius: 15\n  }\n};\n\n/*\n<div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            height: 100,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: \"tomato\"\n          }}\n          onClick={clickHandler}\n        >\n          <p>Memory</p>\n        </div>\n\n        <div style={styles.card} onClick={clickHandler}>\n          {card.type === \"image\" ? (\n            <img\n              style={{\n                minWidth: \"100%\",\n                display: \"block\",\n                alignSelf: \"center\",\n                height: 100\n              }}\n              alt=\"back card\"\n              src={card.data}\n            />\n          ) : (\n            <p>{card.data}</p>\n          )}\n        </div>\n*/\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { Card } from \"../components/Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\n\nexport const CardContext = createContext(null);\n\nconst cardsData = [\n  {\n    id: 1,\n    data: \"//static.pexels.com/photos/59523/pexels-photo-59523.jpeg\",\n    type: \"image\"\n  },\n  { id: 1, data: \"Un chien\", type: \"text\" },\n  { id: 2, data: \"Un chat\", type: \"text\" },\n  {\n    id: 2,\n    data:\n      \"https://images.pexels.com/photos/416160/pexels-photo-416160.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 3,\n    data:\n      \"https://images.pexels.com/photos/148182/pexels-photo-148182.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 3,\n    data: \"Un panda\",\n    type: \"text\"\n  },\n  {\n    id: 4,\n    data:\n      \"https://images.pexels.com/photos/35435/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 4,\n    data: \"Un ours\",\n    type: \"text\"\n  },\n  {\n    id: 5,\n    data:\n      \"https://images.pexels.com/photos/247502/pexels-photo-247502.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 5,\n    data: \"Un lion\",\n    type: \"text\"\n  },\n  {\n    id: 6,\n    data:\n      \"https://images.pexels.com/photos/397857/pexels-photo-397857.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 6,\n    data: \"Un loup\",\n    type: \"text\"\n  },\n  {\n    id: 7,\n    data:\n      \"https://images.pexels.com/photos/66898/elephant-cub-tsavo-kenya-66898.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 7,\n    data: \"Un éléphant\",\n    type: \"text\"\n  },\n  {\n    id: 8,\n    data:\n      \"https://images.pexels.com/photos/2590768/pexels-photo-2590768.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 8,\n    data: \"Un koala\",\n    type: \"text\"\n  },\n  {\n    id: 9,\n    data:\n      \"https://images.pexels.com/photos/35992/gorilla-monkey-ape-zoo.jpg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 9,\n    data: \"Un gorille\",\n    type: \"text\"\n  },\n  {\n    id: 10,\n    data:\n      \"https://images.pexels.com/photos/326012/pexels-photo-326012.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    type: \"image\"\n  },\n  {\n    id: 10,\n    data: \"Un lapin\",\n    type: \"text\"\n  }\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContainer: {\n    overflow: \"auto\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nexport const CardPage = () => {\n  const [cards, setCards] = useState(cardsData);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [coverCards, setCoverCards] = useState(false);\n  const [removedCards, setRemovedCard] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setCards(cards =>\n      cards\n        .map(card => ({ sort: Math.random(), value: card }))\n        .sort((a, b) => a.sort - b.sort)\n        .map(({ value }) => value)\n    );\n  }, []);\n\n  const handlerAddCard = card => {\n    setClickedCards(clickedCards => [...clickedCards, card]);\n  };\n\n  const handlerRemoveCard = card => {\n    setClickedCards(clickedCards =>\n      clickedCards.filter(\n        ({ id, type }) => id !== card.id && type !== card.type\n      )\n    );\n  };\n\n  useEffect(() => {\n    console.log(clickedCards);\n    if (clickedCards.length === 2) {\n      const [card1, card2] = clickedCards;\n\n      if (card1.id === card2.id && card1.type !== card2.type) {\n        setTimeout(() => {\n          setRemovedCard(removedCards => [...removedCards, card1.id]);\n        }, 1000);\n      }\n\n      setTimeout(() => {\n        setCoverCards(true);\n      }, 1000);\n\n      setClickedCards([]);\n    } else {\n      setCoverCards(false);\n    }\n  }, [clickedCards]);\n\n  const shuffle = array => {\n    let counter = array.length;\n\n    // While there are elements in the array\n    while (counter > 0) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * counter);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n\n    return array;\n  };\n\n  const onClickHandler = cardNumber => () => {\n    const cardDataTuples = cardsData.reduce((acc, curr) => {\n      const keepValues = acc[curr[\"id\"]] ? acc[curr[\"id\"]] : [];\n      return { ...acc, [curr[\"id\"]]: [curr, ...keepValues] };\n    }, {});\n    const shuffleArray = shuffle(Object.values(cardDataTuples))\n      .slice(0, cardNumber / 2)\n      .reduce((acc, curr) => [...acc, ...curr], []);\n    console.log(shuffleArray);\n    setCards(shuffleArray);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Memory\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem button onClick={onClickHandler(12)}>\n              <ListItemIcon>\n                <CreditCardIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"12 cartes\"} />\n            </ListItem>\n            <ListItem button onClick={onClickHandler(16)}>\n              <ListItemIcon>\n                <CreditCardIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"16 cartes\"} />\n            </ListItem>\n            <ListItem button onClick={onClickHandler(20)}>\n              <ListItemIcon>\n                <CreditCardIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"20 cartes\"} />\n            </ListItem>\n            <ListItem button onClick={onClickHandler(24)}>\n              <ListItemIcon>\n                <CreditCardIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"24 cartes\"} />\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key={\"Aide\"}>\n              <ListItemIcon>\n                <HelpIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Aide\"} />\n            </ListItem>\n            <ListItem button key={\"Contact\"}>\n              <ListItemIcon>\n                <MailIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Contact\"} />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <CardContext.Provider value={{ handlerAddCard, handlerRemoveCard }}>\n          <div style={styles.parent}>\n            {cards\n              .filter(({ id }) => !removedCards.includes(id))\n              .map(card => (\n                <Card\n                  key={`${card.id}${card.type}`}\n                  card={card}\n                  cover={coverCards}\n                />\n              ))}\n          </div>\n        </CardContext.Provider>\n      </main>\n    </div>\n  );\n};\n\nconst styles = {\n  parent: {\n    display: \"flex\",\n    flex: 1,\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    paddingTop: 5\n  }\n};\n\n/*\n<div\n      style={{\n        display: \"flex\",\n        flex: 1,\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"row\"\n        }}\n      >\n        <SideBar />\n        <CardContext.Provider value={{ handlerAddCard, handlerRemoveCard }}>\n          <div style={styles.parent}>\n            {cards\n              .filter(({ id }) => !removedCards.includes(id))\n              .map(card => (\n                <Card\n                  key={`${card.id}${card.type}`}\n                  card={card}\n                  cover={coverCards}\n                />\n              ))}\n          </div>\n        </CardContext.Provider>\n      </div>\n    </div>\n*/\n","import React from \"react\";\nimport { CardPage } from \"./pages/CardPage\";\n\nfunction App() {\n  return <CardPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}